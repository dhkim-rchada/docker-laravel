# version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        volumes:
            - ./app:/var/www/html:delegated
            - cache_sync:/var/www/html/bootstrap/cache # 이 라인을 추가하여 cache 디렉토리를 제외
            # - storage_sync:/var/www/html/storage # 이 라인을 추가하여 cache 디렉토리를 제외
            # - vendor_sync:/var/www/html/vendor # 이 라인을 추가하여 vendor 디렉토리를 제외
        # - ./supervisord/supervisord.conf:/etc/supervisord.conf
        ports:
            - "9000:9000"
        depends_on:
            - mysql
            - redis
        environment:
            - APP_ENV=local
        # working_dir: /var/www/html
        # command: supervisord -c /etc/supervisord.conf
        # entrypoint: sh -c "php artisan config:clear && php artisan route:clear && php artisan cache:clear"
        networks:
            - default # 기존 bridge 네트워크 연결
            - npm_proxy # Swarm overlay 네트워크 연결

    nginx:
        image: nginx:1.25-alpine
        container_name: laravel_nginx
        volumes:
            # - ./app:/var/www/html
            - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf
        # ports:
        # - "8080:80"
        depends_on:
            - app
        networks:
            - default # 기존 bridge 네트워크 연결
            - npm_proxy # Swarm overlay 네트워크 연결

    mysql:
        image: mariadb:10.6
        # image: mysql:5.7
        container_name: laravel_mariadb
        # restart: unless-stopped
        ports:
            - 3306:3306
        networks:
            - default # 기존 bridge 네트워크 연결
            - npm_proxy # Swarm overlay 네트워크 연결
        environment:
            MYSQL_ROOT_PASSWORD: QOrtpwn4@@
            MYSQL_DATABASE: rchada
            MYSQL_USER: rchada
            MYSQL_PASSWORD: Dkfckek1234!@#$
            MYSQL_CHARSET: utf8mb4
            MYSQL_COLLATION: utf8mb4_unicode_ci
            TZ: Asia/Seoul
        volumes:
            - ./data/mariadb:/var/lib/mysql
            # mariadb 설정 파일을 컨테이너에 마운트
            - ./config/mariadb/my.cnf:/etc/mysql/conf.d/my.cnf
            # 초기화 스크립트를 컨테이너에 마운트
            - ./config/mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql

    redis:
        image: redis:alpine
        container_name: laravel_redis
        ports:
            - "6379:6379"
        volumes:
            - ./data/redis:/data
        networks:
            - default # 기존 bridge 네트워크 연결
            - npm_proxy # Swarm overlay 네트워크 연결
        # restart: always

networks:
    default:
        driver: bridge # 기존 bridge 네트워크
        external: true # 이미 존재하는 네트워크 사용
        name: npm_network

    npm_proxy:
        external: true # 이미 존재하는 Swarm overlay 네트워크 사용
        name: npm_proxy
volumes:
    vendor_sync:
    cache_sync:
    storage_sync:
